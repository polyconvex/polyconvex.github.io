var _0x1d045b=_0x3690;(function(_0x3f7509,_0x1f0726){var _0xf9936d=_0x3690,_0x243624=_0x3f7509();while(!![]){try{var _0x42a578=parseInt(_0xf9936d(0x1a3))/0x1+-parseInt(_0xf9936d(0x17b))/0x2*(-parseInt(_0xf9936d(0x1c3))/0x3)+parseInt(_0xf9936d(0x1aa))/0x4*(-parseInt(_0xf9936d(0x1cb))/0x5)+parseInt(_0xf9936d(0x165))/0x6+-parseInt(_0xf9936d(0x1b6))/0x7+parseInt(_0xf9936d(0x19e))/0x8*(-parseInt(_0xf9936d(0x198))/0x9)+-parseInt(_0xf9936d(0x1cc))/0xa;if(_0x42a578===_0x1f0726)break;else _0x243624['push'](_0x243624['shift']());}catch(_0x5a18bf){_0x243624['push'](_0x243624['shift']());}}}(_0x53fa,0xc0e96));import{EffectComposer}from'https://unpkg.com/three@0.120.0/examples/jsm/postprocessing/EffectComposer.js';import{RenderPass}from'https://unpkg.com/three@0.120.0/examples/jsm/postprocessing/RenderPass.js';import{UnrealBloomPass}from'https://unpkg.com/three@0.120.0/examples/jsm/postprocessing/UnrealBloomPass.js';import{OBJLoader}from'https://unpkg.com/three@0.120.0/examples/jsm/loaders/OBJLoader';import{OrbitControls}from'https://unpkg.com/three@0.120.0/examples/jsm/controls/OrbitControls';var cardtemplate=_0x1d045b(0x172),cardtemplateback=_0x1d045b(0x177),flower=_0x1d045b(0x188),noise2=_0x1d045b(0x1c6),color11=_0x1d045b(0x1cf),backtexture=_0x1d045b(0x196),skullmodel='skull.obj',voronoi='rgbnoise2.png',scene,sceneRTT,camera,cameraRTT,renderer,container,width=window[_0x1d045b(0x168)],height=window[_0x1d045b(0x18d)],frontmaterial,backmaterial,controls,bloomPass,composer,frontcard,backcard,options={'exposure':0.8,'bloomStrength':1.3,'bloomThreshold':0x0,'bloomRadius':0.89,'color0':[0x0,0x1f,0xff],'color1':[0x45,0x45,0xc2],'color2':[0x0,0x96,0xff],'isanimate':!![]},gui=new dat['GUI'](),isanim=gui[_0x1d045b(0x174)](_0x1d045b(0x17f));isanim['add'](options,_0x1d045b(0x1a9))[_0x1d045b(0x180)](_0x1d045b(0x17f)),isanim[_0x1d045b(0x16f)](),gui[_0x1d045b(0x1b3)]();const vert=_0x1d045b(0x19a),fragPlane=_0x1d045b(0x1c7),fragPlaneback=_0x1d045b(0x1b4),vertskull=_0x1d045b(0x187),fragskull=_0x1d045b(0x1ba);function init(){var _0x2eb007=_0x1d045b;container=document['getElementById']('world'),camera=new THREE['PerspectiveCamera'](0x21,window[_0x2eb007(0x168)]/window['innerHeight'],0x1,0x2710),camera[_0x2eb007(0x15e)]['z']=0x64,cameraRTT=new THREE[(_0x2eb007(0x1a6))](0x21,window[_0x2eb007(0x168)]/window[_0x2eb007(0x18d)],0x1,0x2710),cameraRTT[_0x2eb007(0x15e)]['z']=0x21,cameraRTT[_0x2eb007(0x15e)]['y']=0x0,scene=new THREE['Scene'](),sceneRTT=new THREE['Scene'](),sceneRTT[_0x2eb007(0x185)]=new THREE[(_0x2eb007(0x1c5))](0x0);const _0x3df4dd=new THREE[(_0x2eb007(0x1b0))](0xffffff,0.5);scene[_0x2eb007(0x190)](_0x3df4dd),renderer=new THREE[(_0x2eb007(0x1ae))]({'antialias':!![],'autoSize':!![]}),renderer[_0x2eb007(0x19d)](0x2),renderer[_0x2eb007(0x1bf)](window[_0x2eb007(0x168)],window[_0x2eb007(0x18d)]),renderer['autoClear']=![],renderer['shadowMap'][_0x2eb007(0x16a)]=THREE['PCFSoftShadowMap'],renderer[_0x2eb007(0x1bb)]=THREE[_0x2eb007(0x167)],renderer['outputEncoding']=THREE[_0x2eb007(0x1c8)],controls=new OrbitControls(camera,renderer[_0x2eb007(0x18f)]),controls[_0x2eb007(0x16b)]=![],controls['enablePan']=![],controls[_0x2eb007(0x194)](),document['getElementById'](_0x2eb007(0x197))[_0x2eb007(0x1b1)](renderer['domElement']);var _0x47e62c=new RenderPass(sceneRTT,cameraRTT);bloomPass=new UnrealBloomPass(new THREE[(_0x2eb007(0x1bd))](window[_0x2eb007(0x168)],window[_0x2eb007(0x18d)]),0.7,0.4,0.85),composer=new EffectComposer(renderer),composer[_0x2eb007(0x1cd)]=![],composer['addPass'](_0x47e62c),composer[_0x2eb007(0x160)](bloomPass),background(),plane(),planeback(),loadskull(),animate();}function background(){var _0x15d67f=_0x1d045b;const _0x18913d=_0x15d67f(0x173),_0x307c4e=0x1,_0x19c17b=new THREE[(_0x15d67f(0x15f))](0x50,0x50,0x50),_0x57f7e3=new THREE[(_0x15d67f(0x178))]();_0x57f7e3['load'](_0x18913d,_0x2afa81=>{var _0x157f6e=_0x15d67f;_0x2afa81[_0x157f6e(0x179)]=THREE[_0x157f6e(0x1c8)],_0x2afa81['anisotropy']=0x10,_0x2afa81[_0x157f6e(0x1a7)]=THREE[_0x157f6e(0x184)],_0x2afa81[_0x157f6e(0x1bc)]=THREE[_0x157f6e(0x184)],_0x2afa81[_0x157f6e(0x163)]=THREE['LinearFilter'],_0x2afa81[_0x157f6e(0x169)]=THREE[_0x157f6e(0x18a)];const _0x5cbcf4=new THREE[(_0x157f6e(0x1c2))]({'map':_0x2afa81,'side':THREE['BackSide']});_0x2afa81[_0x157f6e(0x1a1)]=()=>{_0x2afa81['needsUpdate']=!![];};const _0x3bb8ab=document[_0x157f6e(0x19b)](_0x157f6e(0x16d)),_0x4c35f4=_0x3bb8ab[_0x157f6e(0x1c9)]('2d');_0x3bb8ab['width']=_0x2afa81[_0x157f6e(0x1b8)][_0x157f6e(0x1d0)],_0x3bb8ab[_0x157f6e(0x1d1)]=_0x2afa81['image'][_0x157f6e(0x1d1)],_0x4c35f4[_0x157f6e(0x18b)](_0x2afa81['image'],0x0,0x0);const _0x5a5e7d=_0x4c35f4[_0x157f6e(0x183)](0x0,0x0,_0x3bb8ab['width'],_0x3bb8ab[_0x157f6e(0x1d1)]),_0x248a99=_0x5a5e7d[_0x157f6e(0x1ad)];for(let _0x3f9cc1=0x0;_0x3f9cc1<_0x248a99[_0x157f6e(0x1af)];_0x3f9cc1+=0x4){_0x248a99[_0x3f9cc1]*=_0x307c4e,_0x248a99[_0x3f9cc1+0x1]*=_0x307c4e,_0x248a99[_0x3f9cc1+0x2]*=_0x307c4e;}_0x4c35f4[_0x157f6e(0x17d)](_0x5a5e7d,0x0,0x0),_0x2afa81['image']=_0x3bb8ab,_0x2afa81['needsUpdate']=!![];const _0x288368=new THREE['Mesh'](_0x19c17b,_0x5cbcf4);scene[_0x157f6e(0x190)](_0x288368);});}function plane(){var _0x13c519=_0x1d045b,_0x2086fe=new THREE[(_0x13c519(0x1be))](0x14,0x1e);frontmaterial=new THREE[(_0x13c519(0x16c))]({'uniforms':{'cardtemplate':{'type':'t','value':new THREE[(_0x13c519(0x178))]()['load'](cardtemplate)},'backtexture':{'type':'t','value':new THREE[(_0x13c519(0x178))]()[_0x13c519(0x1c0)](backtexture)},'noise':{'type':'t','value':new THREE[(_0x13c519(0x178))]()[_0x13c519(0x1c0)](noise2)},'skullrender':{'type':'t','value':composer[_0x13c519(0x170)]['texture']},'resolution':{'value':new THREE[(_0x13c519(0x1bd))](window[_0x13c519(0x168)],window[_0x13c519(0x18d)])},'noiseTex':{'type':'t','value':new THREE['TextureLoader']()[_0x13c519(0x1c0)](voronoi)},'color':{'type':'t','value':new THREE['TextureLoader']()[_0x13c519(0x1c0)](color11)}},'fragmentShader':fragPlane,'vertexShader':vert,'transparent':!![],'depthWrite':![]}),frontcard=new THREE[(_0x13c519(0x15d))](_0x2086fe,frontmaterial),scene[_0x13c519(0x190)](frontcard);}function planeback(){var _0x311748=_0x1d045b,_0x154bf4=new THREE['PlaneGeometry'](0x14,0x1e);backmaterial=new THREE['ShaderMaterial']({'uniforms':{'cardtemplate':{'type':'t','value':new THREE['TextureLoader']()[_0x311748(0x1c0)](cardtemplateback)},'backtexture':{'type':'t','value':new THREE['TextureLoader']()[_0x311748(0x1c0)](backtexture)},'noise':{'type':'t','value':new THREE[(_0x311748(0x178))]()[_0x311748(0x1c0)](noise2)},'skullrender':{'type':'t','value':new THREE[(_0x311748(0x178))]()[_0x311748(0x1c0)](flower)},'resolution':{'value':new THREE[(_0x311748(0x1bd))](window[_0x311748(0x168)],window['innerHeight'])},'noiseTex':{'type':'t','value':new THREE[(_0x311748(0x178))]()[_0x311748(0x1c0)](voronoi)},'color':{'type':'t','value':new THREE[(_0x311748(0x178))]()[_0x311748(0x1c0)](color11)}},'fragmentShader':fragPlaneback,'vertexShader':vert,'transparent':!![],'depthWrite':![]}),backcard=new THREE[(_0x311748(0x15d))](_0x154bf4,backmaterial),backcard[_0x311748(0x18e)]['set'](0x0,Math['PI'],0x0),scene[_0x311748(0x190)](backcard);}var eye,eye2,basicmat,skullmaterial,modelgroup=new THREE['Group']();function loadskull(){var _0x37fff6=_0x1d045b;skullmaterial=new THREE['ShaderMaterial']({'uniforms':{'time':{'type':'f','value':0x0},'color1':{'value':new THREE[(_0x37fff6(0x1ce))](...options[_0x37fff6(0x1ab)])},'color0':{'value':new THREE['Vector3'](...options[_0x37fff6(0x1b2)])},'resolution':{'value':new THREE[(_0x37fff6(0x1bd))](window['innerWidth'],window[_0x37fff6(0x18d)])}},'fragmentShader':fragskull,'vertexShader':vertskull});var _0x244986=new THREE[(_0x37fff6(0x15f))](1.5,0x20,0x20);basicmat=new THREE[(_0x37fff6(0x1c2))](),basicmat[_0x37fff6(0x19c)][_0x37fff6(0x186)](...options['color2']),eye=new THREE['Mesh'](_0x244986,basicmat),eye2=new THREE['Mesh'](_0x244986,basicmat),eye[_0x37fff6(0x15e)]['set'](-992.2,-2.2,-6.6),eye2['position'][_0x37fff6(0x1a2)](992.2,-2.2,-6.6),modelgroup=new THREE['Object3D'](),modelgroup[_0x37fff6(0x190)](eye),modelgroup[_0x37fff6(0x190)](eye2);var _0x2af1f1=new OBJLoader();_0x2af1f1[_0x37fff6(0x1c0)](skullmodel,function(_0x501260){var _0x480ef4=_0x37fff6,_0x227cdd=_0x501260[_0x480ef4(0x1b7)]();_0x227cdd[_0x480ef4(0x15e)][_0x480ef4(0x1a2)](0x0,0x0,-0x3),_0x227cdd[_0x480ef4(0x18e)]['set'](Math['PI'],0x0,Math['PI']),_0x227cdd[_0x480ef4(0x176)][_0x480ef4(0x19f)]((_0x32a9b2,_0x50630f)=>{var _0x4ced50=_0x480ef4;_0x32a9b2['traverse'](function(_0x532cc7){var _0x16faef=_0x3690;_0x532cc7[_0x16faef(0x182)]=new THREE[(_0x16faef(0x17e))]()[_0x16faef(0x17c)](_0x532cc7[_0x16faef(0x182)]),_0x532cc7[_0x16faef(0x182)][_0x16faef(0x171)](),_0x532cc7[_0x16faef(0x16e)]=skullmaterial,_0x532cc7[_0x16faef(0x17a)]=!![],_0x532cc7[_0x16faef(0x1a8)]=!![],_0x532cc7[_0x16faef(0x193)]=!![],_0x532cc7[_0x16faef(0x16e)][_0x16faef(0x18c)]=THREE[_0x16faef(0x189)],_0x532cc7[_0x16faef(0x182)]['computeVertexNormals']();}),_0x227cdd[_0x4ced50(0x161)]['set'](0.2,0.2,0.2),modelgroup[_0x4ced50(0x190)](_0x227cdd),sceneRTT['add'](modelgroup);});});}var matrix=new THREE[(_0x1d045b(0x1b5))](),period=0x5,clock=new THREE[(_0x1d045b(0x175))]();function updateDraw(_0x1efba2){var _0x217297=_0x1d045b;modelgroup[_0x217297(0x18e)]['set'](-camera[_0x217297(0x18e)]['_x'],-camera[_0x217297(0x18e)]['_y'],0x0),options[_0x217297(0x1a9)]&&(matrix[_0x217297(0x199)](clock[_0x217297(0x1ca)]()*0.7*Math['PI']/period),camera[_0x217297(0x15e)][_0x217297(0x195)](matrix),camera[_0x217297(0x1c4)](frontcard[_0x217297(0x15e)])),bloomPass[_0x217297(0x1ac)]=options['bloomThreshold'],bloomPass['strength']=options[_0x217297(0x192)],bloomPass[_0x217297(0x1b9)]=options[_0x217297(0x164)],skullmaterial&&(skullmaterial['uniforms'][_0x217297(0x166)][_0x217297(0x15c)]=_0x1efba2/0xfa0,skullmaterial[_0x217297(0x1a4)][_0x217297(0x1ab)][_0x217297(0x15c)]=new THREE[(_0x217297(0x1ce))](...options[_0x217297(0x1ab)]),skullmaterial[_0x217297(0x1a4)][_0x217297(0x1b2)][_0x217297(0x15c)]=new THREE['Vector3'](...options[_0x217297(0x1b2)]),eye2[_0x217297(0x16e)][_0x217297(0x19c)]['setRGB'](...options[_0x217297(0x1c1)]),eye[_0x217297(0x16e)][_0x217297(0x19c)]['setRGB'](...options[_0x217297(0x1c1)]));}function animate(_0x9e4aaf){var _0x351129=_0x1d045b;requestAnimationFrame(animate),updateDraw(_0x9e4aaf),composer[_0x351129(0x1a5)](),renderer[_0x351129(0x1a5)](scene,camera);}function handleResize(){var _0x4bc866=_0x1d045b;camera[_0x4bc866(0x191)]=window[_0x4bc866(0x168)]/window[_0x4bc866(0x18d)],camera[_0x4bc866(0x162)](),cameraRTT['aspect']=window[_0x4bc866(0x168)]/window[_0x4bc866(0x18d)],cameraRTT['updateProjectionMatrix'](),frontcard[_0x4bc866(0x16e)]['uniforms'][_0x4bc866(0x1a0)][_0x4bc866(0x15c)]=new THREE[(_0x4bc866(0x1bd))](window[_0x4bc866(0x168)],window[_0x4bc866(0x18d)]),skullmaterial[_0x4bc866(0x1a4)][_0x4bc866(0x1a0)][_0x4bc866(0x15c)]=new THREE[(_0x4bc866(0x1bd))](window[_0x4bc866(0x168)],window[_0x4bc866(0x18d)]),renderer[_0x4bc866(0x19d)](0x2),renderer['setSize'](window[_0x4bc866(0x168)],window['innerHeight']);}function _0x3690(_0x3c5904,_0x4d2cf0){var _0x53fab5=_0x53fa();return _0x3690=function(_0x369044,_0x827575){_0x369044=_0x369044-0x15c;var _0x333756=_0x53fab5[_0x369044];return _0x333756;},_0x3690(_0x3c5904,_0x4d2cf0);}window[_0x1d045b(0x181)](_0x1d045b(0x1c0),init,![]),window['addEventListener']('resize',handleResize,![]);function _0x53fa(){var _0x22fe83=['applyMatrix4','color3.jpg','world','171gLQMxy','makeRotationY','\x0a\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20varying\x20vec3\x20camPos;\x0a\x20\x20varying\x20vec3\x20eyeVector;\x0a\x20\x20varying\x20vec3\x20vNormal;\x0a\x0a\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x20\x20\x20\x20camPos\x20=\x20cameraPosition;\x0a\x20\x20\x20\x20vNormal\x20=\x20normal;\x0a\x20\x20\x20\x20vec4\x20worldPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0);\x0a\x20\x20\x20\x20eyeVector\x20=\x20normalize(worldPosition.xyz\x20-\x20abs(cameraPosition));\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x20\x20}\x0a','createElement','color','setPixelRatio','172504aCGaBP','forEach','resolution','onUpdate','set','913183hwomZu','uniforms','render','PerspectiveCamera','wrapS','normalsNeedUpdate','isanimate','40sJaDTt','color1','threshold','data','WebGLRenderer','length','AmbientLight','appendChild','color0','close','\x0a\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20uniform\x20sampler2D\x20skullrender;\x0a\x20\x20uniform\x20sampler2D\x20cardtemplate;\x0a\x20\x20uniform\x20sampler2D\x20backtexture;\x0a\x20\x20uniform\x20sampler2D\x20noiseTex;\x0a\x20\x20uniform\x20sampler2D\x20color;\x0a\x20\x20uniform\x20sampler2D\x20noise;\x0a\x20\x20uniform\x20vec4\x20resolution;\x0a\x20\x20varying\x20vec3\x20camPos;\x0a\x20\x20varying\x20vec3\x20eyeVector;\x0a\x20\x20varying\x20vec3\x20vNormal;\x0a\x0a\x20\x20float\x20Fresnel(vec3\x20eyeVector,\x20vec3\x20worldNormal)\x20{\x0a\x20\x20\x20\x20return\x20pow(\x201.0\x20+\x20dot(\x20eyeVector,\x20worldNormal),\x201.80\x20);\x0a\x20\x20}\x0a\x0a\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20gl_FragCoord.xy/resolution.xy\x20;\x0a\x20\x20\x20\x20vec4\x20temptex\x20=\x20texture2D(\x20cardtemplate,\x20vUv);\x0a\x20\x20\x20\x20vec4\x20skulltex\x20=\x20texture2D(\x20skullrender,\x20vUv\x20);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20temptex;\x0a\x20\x20\x20\x20vec4\x20noisetex\x20=\x20texture2D(\x20noise,\x20mod(vUv*2.,1.));\x0a\x20\x20\x20\x20float\x20f\x20=\x20Fresnel(eyeVector,\x20vNormal);\x0a\x0a\x20\x20\x20\x20vec2\x20uv2\x20=\x20vUv;\x0a\x20\x20\x20\x20vec3\x20pixeltex\x20=\x20texture2D(noiseTex,mod(uv*5.,1.)).rgb;\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20iTime\x20=\x201.*0.004;\x0a\x20\x20\x20\x20uv.y\x20+=\x20iTime\x20/\x2010.0;\x0a\x20\x20\x20\x20uv.x\x20-=\x20(sin(iTime/10.0)/2.0);\x0a\x20\x20\x20\x20uv2.y\x20+=\x20iTime\x20/\x2014.0;\x0a\x20\x20\x20\x20uv2.x\x20+=\x20(sin(iTime/10.0)/9.0);\x0a\x20\x20\x20\x20float\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20result\x20+=\x20texture2D(noiseTex,\x20mod(uv*4.,1.)\x20*\x200.6\x20+\x20vec2(iTime*-0.003)).r;\x0a\x20\x20\x20\x20result\x20*=\x20texture2D(noiseTex,\x20mod(uv2*4.,1.)\x20*\x200.9\x20+\x20vec2(iTime*+0.002)).b;\x0a\x20\x20\x20\x20result\x20=\x20pow(result,\x2010.0);\x0a\x0a\x20\x20\x20\x20vec4\x20bactex\x20=\x20texture2D(\x20backtexture,\x20vUv);\x0a\x20\x20\x20\x20float\x20tone\x20=\x20pow(dot(normalize(-camPos),\x20normalize(bactex.rgb)),\x201.);\x0a\x20\x20\x20\x20vec4\x20colortex\x20=\x20texture2D(\x20color,\x20vec2(tone,0.));\x0a\x20\x20\x20\x20if(gl_FragColor.g\x20>=\x20.5\x20&&\x20gl_FragColor.r\x20<\x200.6){\x0a\x20\x20\x20\x20\x20\x20float\x20tone\x20=\x20pow(dot(normalize(-camPos),\x20normalize(skulltex.rgb)),\x201.);\x0a\x20\x20\x20\x20\x20\x20vec4\x20colortex2\x20=\x20texture2D(\x20color,\x20vec2(tone,0.));\x0a\x20\x20\x20\x20\x20\x20if(skulltex.a\x20>\x200.2){\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20colortex;\x0a\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(0.)\x20+\x20f;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20+=\x20noisetex/9.;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20+=\x20noisetex/9.;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20*=\x20colortex;\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20+=\x20vec4(sin((tone\x20+\x20vUv.x\x20+\x20vUv.y/10.)*10.))/8.;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20//\x20Set\x20the\x20opacity\x20of\x20the\x20fragment\x20color\x0a\x20\x20\x20\x20gl_FragColor.a\x20=\x20temptex.a\x20*\x201.;\x20\x20//\x20Here,\x20multiply\x20the\x20alpha\x20by\x200.5\x20to\x20reduce\x20opacity\x20to\x2050%\x0a\x20\x20}\x0a','Matrix4','2661827AehsQS','clone','image','radius','\x0a\x20\x20\x20\x20\x20\x20#define\x20NUM_OCTAVES\x205\x0a\x20\x20\x20\x20\x20\x20uniform\x20vec4\x20resolution;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20vNormal;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20vPosition;\x0a\x20\x20\x20\x20\x20\x20uniform\x20float\x20time;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20camPos;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20\x20\x20uniform\x20vec3\x20color1;\x0a\x20\x20\x20\x20\x20\x20uniform\x20vec3\x20color0;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20eyeVector;\x0a\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20float\x20rand(vec2\x20n)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20fract(sin(dot(n,\x20vec2(12.9898,\x204.1414)))\x20*\x2043758.5453);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20float\x20noise(vec2\x20p){\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20ip\x20=\x20floor(p);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20u\x20=\x20fract(p);\x0a\x20\x20\x20\x20\x20\x20\x20\x20u\x20=\x20u*u*(3.0-2.0*u);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20res\x20=\x20mix(\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20res*res;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20float\x20fbm(vec2\x20x)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20v\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20a\x20=\x200.8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20shift\x20=\x20vec2(100);\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Rotate\x20to\x20reduce\x20axial\x20bias\x0a\x20\x20\x20\x20\x20\x20\x20\x20mat2\x20rot\x20=\x20mat2(cos(0.5),\x20sin(0.5),\x20-sin(0.5),\x20cos(0.50));\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_OCTAVES;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20v\x20+=\x20a\x20*\x20noise(x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x20rot\x20*\x20x\x20*\x202.0\x20+\x20shift;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20a\x20*=\x200.99;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20v;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20float\x20setOpacity(float\x20r,\x20float\x20g,\x20float\x20b)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20tone\x20=\x20(r\x20+\x20g\x20+\x20b)\x20/\x203.4;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20alpha\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(tone<0.69)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20alpha\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20alpha;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20vec3\x20rgbcol(float\x20r,\x20float\x20g,\x20float\x20b)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec3(r/255.0,g/255.0,b/255.0);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20float\x20Fresnel(vec3\x20eyeVector,\x20vec3\x20worldNormal)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20pow(\x201.0\x20+\x20dot(\x20eyeVector,\x20worldNormal),\x203.0\x20);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20olduv\x20=\x20gl_FragCoord.xy/resolution.xy\x20;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20f\x20=\x20Fresnel(eyeVector,\x20vNormal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20gradient2\x20=\x20(f)*(.93\x20-\x20vPosition.y)\x20;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20scale\x20=\x204.;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20olduv\x20*=\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20olduv.y\x20-=\x200.5;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20olduv.y\x20=\x20olduv.y\x20-\x20time;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20p\x20=\x20olduv*scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20noise\x20=\x20fbm(\x20p\x20+\x20time\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20gl_FragCoord.xy/resolution.xy\x20;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20\x20uv\x20=\x20normalize(\x20vNormal\x20).xy\x20;\x20\x0a\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20newCam\x20=\x20vec3(0.,5.,10.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20gradient\x20=\x20dot(.0\x20-\x20\x20normalize(\x20newCam\x20),\x20normalize(\x20vNormal\x20))\x20;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20viewDirectionW\x20=\x20normalize(camPos\x20-\x20vPosition);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fresnelTerm\x20=\x20dot(viewDirectionW,\x20vNormal);\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20fresnelTerm\x20=\x20clamp(\x201.\x20-\x20fresnelTerm,\x200.,\x201.)\x20;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20color\x20=\x20vec3(noise)\x20+\x20gradient;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20color2\x20=\x20color\x20-\x200.3;\x0a\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20noisetone\x20=\x20setOpacity(color.r,color.g,color.b);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20noisetone2\x20=\x20setOpacity(color2.r,color2.g,color2.b);\x0a\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20backColor\x20=\x20vec4(color,\x201.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20backColor.rgb\x20=\x20rgbcol(color0.r,color0.g,color0.b)*noisetone;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20backColor.a\x20=\x20noisetone;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20frontColor\x20=\x20vec4(color2,\x201.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20frontColor.rgb\x20=\x20rgbcol(color1.r,color1.g,color1.b)*noisetone;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20frontColor.a\x20=\x20noisetone2;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(noisetone2>0.0){\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20show\x20first\x20color\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20frontColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20show\x202nd\x20color\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20backColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a','interpolateneMapping','wrapT','Vector2','PlaneGeometry','setSize','load','color2','MeshBasicMaterial','3WLlNSE','lookAt','Color','noise2.png','\x0a\x09varying\x20vec2\x20vUv;\x0a\x20\x20uniform\x20sampler2D\x20skullrender;\x0a\x20\x20uniform\x20sampler2D\x20cardtemplate;\x0a\x20\x20uniform\x20sampler2D\x20backtexture;\x0a\x20\x20uniform\x20sampler2D\x20noiseTex;\x0a\x20\x20uniform\x20sampler2D\x20color;\x0a\x20\x20uniform\x20sampler2D\x20noise;\x0a\x20\x20uniform\x20vec4\x20resolution;\x0a\x20\x20varying\x20vec3\x20camPos;\x0a\x20\x20varying\x20vec3\x20eyeVector;\x0a\x20\x20varying\x20vec3\x20vNormal;\x0a\x0a\x20\x20float\x20Fresnel(vec3\x20eyeVector,\x20vec3\x20worldNormal)\x20{\x0a\x20\x20\x20\x20return\x20pow(\x201.0\x20+\x20dot(\x20eyeVector,\x20worldNormal),\x201.80\x20);\x0a\x20\x20}\x0a\x0a\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20gl_FragCoord.xy/resolution.xy\x20;\x0a\x20\x20\x20\x20vec4\x20temptex\x20=\x20texture2D(\x20cardtemplate,\x20vUv);\x0a\x20\x20\x20\x20vec4\x20skulltex\x20=\x20texture2D(\x20skullrender,\x20uv\x20-\x200.5\x20);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20temptex;\x0a\x20\x20\x20\x20float\x20f\x20=\x20Fresnel(eyeVector,\x20vNormal);\x0a\x20\x20\x20\x20vec4\x20noisetex\x20=\x20texture2D(\x20noise,\x20mod(vUv*2.,1.));\x0a\x20\x20\x20\x20if(gl_FragColor.g\x20>=\x20.5\x20&&\x20gl_FragColor.r\x20<\x200.6){\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20f\x20+\x20skulltex;\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20+=\x20noisetex/7.;\x0a\x0a\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20vec4\x20bactex\x20=\x20texture2D(\x20backtexture,\x20vUv);\x0a\x20\x20\x20\x20\x20\x20float\x20tone\x20=\x20pow(dot(normalize(camPos),\x20normalize(bactex.rgb)),\x201.);\x0a\x20\x20\x20\x20\x20\x20vec4\x20colortex\x20=\x20texture2D(\x20color,\x20vec2(tone,0.));\x0a\x0a\x20\x20\x20\x20\x20\x20//sparkle\x20code,\x20dont\x20touch\x20this!\x0a\x20\x20\x20\x20\x20\x20vec2\x20uv2\x20=\x20vUv;\x0a\x20\x20\x20\x20\x20\x20vec3\x20pixeltex\x20=\x20texture2D(noiseTex,mod(uv*5.,1.)).rgb;\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20float\x20iTime\x20=\x201.*0.004;\x0a\x20\x20\x20\x20\x20\x20uv.y\x20+=\x20iTime\x20/\x2010.0;\x0a\x20\x20\x20\x20\x20\x20uv.x\x20-=\x20(sin(iTime/10.0)/2.0);\x0a\x20\x20\x20\x20\x20\x20uv2.y\x20+=\x20iTime\x20/\x2014.0;\x0a\x20\x20\x20\x20\x20\x20uv2.x\x20+=\x20(sin(iTime/10.0)/9.0);\x0a\x20\x20\x20\x20\x20\x20float\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20result\x20+=\x20texture2D(noiseTex,\x20mod(uv*4.,1.)\x20*\x200.6\x20+\x20vec2(iTime*-0.003)).r;\x0a\x20\x20\x20\x20\x20\x20result\x20*=\x20texture2D(noiseTex,\x20mod(uv2*4.,1.)\x20*\x200.9\x20+\x20vec2(iTime*+0.002)).b;\x0a\x20\x20\x20\x20\x20\x20result\x20=\x20pow(result,\x2010.0);\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20*=\x20colortex;\x0a\x20\x20\x20\x20\x20\x20gl_FragColor\x20+=\x20vec4(sin((tone\x20+\x20vUv.x\x20+\x20vUv.y/10.)*10.))/8.;\x0a\x20\x20\x20\x20\x20\x20//\x20gl_FragColor\x20+=\x20vec4(108.0)*result;\x0a\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20gl_FragColor.a\x20=\x20temptex.a;\x0a\x20\x20}\x0a','sRGBEncoding','getContext','getDelta','481680dbAaLV','2898310aPJHJK','renderToScreen','Vector3','color11.png','width','height','value','Mesh','position','SphereGeometry','addPass','scale','updateProjectionMatrix','magFilter','bloomRadius','3347082ILVBuO','time','ACESFilmicToneMapping','innerWidth','minFilter','type','enableZoom','ShaderMaterial','canvas','material','open','readBuffer','mergeVertices','cardtemplate3.png','cosmos.jpg','addFolder','Clock','children','cardtemplateback4.png','TextureLoader','encoding','verticesNeedUpdate','2724570HGmpkj','fromBufferGeometry','putImageData','Geometry','Animate','name','addEventListener','geometry','getImageData','RepeatWrapping','background','setRGB','\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20vNormal;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20camPos;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20vPosition;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20\x20\x20varying\x20vec3\x20eyeVector;\x0a\x0a\x20\x20\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vNormal\x20=\x20normal;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x20\x20\x20\x20\x20\x20\x20\x20camPos\x20=\x20cameraPosition;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPosition\x20=\x20position;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20worldPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20eyeVector\x20=\x20normalize(worldPosition.xyz\x20-\x20cameraPosition);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x20\x20\x20\x20\x20\x20}\x0a','flower3.png','SmoothShading','LinearMipMapLinearFilter','drawImage','flatShading','innerHeight','rotation','domElement','add','aspect','bloomStrength','uvsNeedUpdate','update'];_0x53fa=function(){return _0x22fe83;};return _0x53fa();}